---
- hosts: localhost
  connection: local
  become: 'true'

  pre_tasks:
    - name: update arch repositories
      pacman:
        update_cache: yes
        upgrade: yes
        force: yes
      when: ansible_facts['os_family']|lower == 'archlinux'

    - name: update deb repositories
      apt:
        update_cache: yes
        upgrade: yes
        force: yes
      when: ansible_facts['os_family']|lower == 'debian'

    - name: update fedora repositories
      dnf:
        update_cache: yes
        update_only: yes
      when: ansible_facts['distribution']|lower == 'fedora'

  tasks:
  - name: install packages - base
    package:
      name:
        - htop
        - sakura
        - python3
  
  - name: install packages - Arch
    package:
      name:
        - yay
    when: ansible_facts['distribution']|lower == 'archlinux'

  - name: install packages - Fedora
    package:
      name:
        - ibm-plex-fonts-all
    when: ansible_facts['distribution']|lower == 'fedora'

  - name: install packages - Debian
    package:
      name:
        - fonts-ibm-plex
    when: ansible_facts['distribution']|lower == 'debian'

  - name: check if cargo is installed
    shell: 
      cmd: cargo --version
    register: cargo_exists
    ignore_errors: 'yes'

  - name: download rust installer
    when: cargo_exists is failed
    get_url: 
      url: https://sh.rustup.rs
      dest: /tmp/sh.rustup.rs
      mode: '0755'
      force: 'yes'
    tags: 
      - rust

  - name: install rust & cargo
    when: cargo_exists is failed
    shell: /tmp/sh.rustup.rs -y
    tags:
      - rust

  - name: install nvm
    shell:
      cmd: curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash

  - name: install node
    shell:
      cmd: nvm install node

  - name: install neovim from release
    shell:
      cmd: curl https://raw.githubusercontent.com/LunarVim/LunarVim/rolling/utils/installer/install-neovim-from-release | bash

  - name: install lunarvim
    shell:
      cmd: curl https://raw.githubusercontent.com/lunarvim/lunarvim/master/utils/installer/install.sh | bash

  - name: copy custom .bashrc file
    copy:
      src: files/bash/bashrc
      dest: /home/onigiri/.bashrc
      owner: onigiri
      group: onigiri

  - name: copy sakura config file
    copy:
      src: files/config/sakura/sakura.conf
      dest: /home/onigiri/.config/sakura/sakura.conf
      owner: onigiri
      group: onigiri

  - name: copy .bash_aliases file - arch
    copy:
      src: files/bash/bash_aliases_arch
      dest: /home/onigiri/.bash_aliases
      owner: onigiri
      group: onigiri
    when: ansible_facts['os_family']|lower == 'archlinux'

  - name: copy .bash_aliases file - deb
    copy:
      src: files/bash/bash_aliases_deb
      dest: /home/onigiri/.bash_aliases
      owner: onigiri
      group: onigiri
    when: ansible_facts['os_family']|lower == 'debian'

  - name: copy .bash_aliases file - fed
    copy:
      src: files/bash/bash_aliases_fed
      dest: /home/onigiri/.bash_aliases
      owner: onigiri
      group: onigiri
    when: ansible_facts['os_family']|lower == 'fedora'

#  - name: add ansible user
#    user:
#      name: tractor
#      system: yes
#
#  - name: set up sudo for ansible user
#    copy:
#      src: files/bash/sudoer_tractor
#      dest: /etc/sudoers.d/tractor
#      owner: root
#      group: root
#      mode: 0440
#
#  - name: add ansible-pull cron job
#    cron:
#      name: ansible auto-provision
#      user: tractor
#      minute: "*/10"
#      job: ansible-pull -o -U https://gitlab.com/onigiri070/ansible_workstation.git 
